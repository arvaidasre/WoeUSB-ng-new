name: CI/CD Pipeline

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]
  release:
    types: [ published ]

jobs:
  lint:
    name: Code Quality
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install black flake8 mypy
          
      - name: Run black
        run: black --check --diff .
        
      - name: Run flake8
        run: flake8 WoeUSB/
        
      - name: Run mypy
        run: mypy WoeUSB/ --ignore-missing-imports

  test:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            p7zip-full \
            grub2-common \
            grub-pc-bin \
            parted \
            dosfstools \
            ntfs-3g \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev
            
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build pytest
          pip install -e .
          
      - name: Run tests
        run: pytest -v || echo "No tests found, skipping"

  build:
    name: Build Distribution
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build
          
      - name: Build package
        run: python -m build
        
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/

  publish:
    name: Publish to PyPI
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published'
    environment:
      name: pypi
      url: https://pypi.org/p/WoeUSB-ng
    permissions:
      id-token: write
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: dist
          path: dist/
          
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
